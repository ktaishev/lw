#ifndef LW_UTILITY_H_
#define LW_UTILITY_H_

#include <iostream>

//Функция печатающая основное меню
void print_main_menu(void)
{
    std::cout << "1. Работа с трубами" << std::endl
        << "2. Работа с компрессорными станциями" << std::endl
        << "3. Работа с нефтесетью" << std::endl
        << "4. Помощь" << std::endl
        << "0. Выход" << std::endl;
}

//Функция печатающая меню при работе с трубами
void print_pipe_menu(void)
{
    std::cout << "1. Добавить трубу" << std::endl
        << "2. Удалить трубу" << std::endl
        << "3. Изменить состояние трубы (Работает/На ремонте)" << std::endl
        << "4. Напечатать все трубы" << std::endl
        << "5. Выбрать трубу" << std::endl
        << "6. Удалить трубу из выбранных" << std::endl
        << "7. Напечатать выбранные трубы" << std::endl
        << "8. Поиск по параметру" << std::endl
        << "9. Изменение выбранных труб" << std::endl
        << "19. Сохранение в файл" << std::endl
        << "11. Загрузка из файла" << std::endl
        << "12. Помощь" << std::endl
        << "0. Возврат в главное меню" << std::endl;
}

//Функция печатающая меню при работе с компрессорными станциями
void print_ks_menu(void)
{
    std::cout << "1. Добавить компрессорную станцию" << std::endl
        << "2. Удалить компрессорную станцию" << std::endl
        << "3. Закрыть цех" << std::endl
        << "4. Открыть цех" << std::endl
        << "5. Напечатать все компрессорные станции" << std::endl
        << "6. Выбрать компрессорную станцию" << std::endl
        << "7. Напечатать выбранные компрессорные станции" << std::endl
        << "8. Поиск по параметру" << std::endl
        << "9. Изменение выбранных компрессорных станций" << std::endl
        << "10. Сохранение в файл" << std::endl
        << "11. Загрузка из файла" << std::endl
        << "12. Помощь" << std::endl
        << "0. Возврат в главное меню" << std::endl;
}

//Функция печатающая меню при работе с графами
void print_graph_menu(void)
{
    void();
}

//Функция возвращающая число в случае успешного ввода, 
//которое принадлежит заданному интервалу
int get_number(int min, int max)
{
    int n;
    while ((std::cin >> n).fail() || n < min || n > max)
    {
        std::cin.clear();
        std::cin.ignore(32767, '\n');
        std::cout << "Неккоректный ввод. Введите число в диапазоне " << min << "-" << max << ": ";
    }
    return n;
}
#endif